/*
========================================================================================
    GENERAL
========================================================================================
*/

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // withName: CUSTOM_DUMPSOFTWAREVERSIONS {
    //     publishDir = [
    //         path: { "${params.outdir}/pipeline_info" },
    //         mode: "${params.publish_dir_mode}",
    //         pattern: '*_versions.yml'
    //     ]
    // }
}

/*
========================================================================================
    INPUT
========================================================================================
*/

// if(params.run_input_check) {
//     process {
//         withName: 'NFCORE_CUTANDRUN:CUTANDRUN:INPUT_CHECK:SAMPLESHEET_CHECK' {
//             publishDir = [
//                 path: { "${params.outdir}/pipeline_info" },
//                 mode: "${params.publish_dir_mode}",
//                 saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
//             ]
//         }
//     }
// }

/*
========================================================================================
    GENOME PREPARATION
========================================================================================
*/

if(params.run_genome_prep) {
    process {
        withName: 'UNTAR_.*' {
            ext.args2 = '--no-same-owner'
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:PREPARE_PRIMARY_GENOME:GUNZIP_FASTA' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:PREPARE_PRIMARY_GENOME:GUNZIP_GTF' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:PREPARE_SMRNA_GENOME:GUNZIP_FASTA' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:PREPARE_PRIMARY_GENOME:CUSTOM_GETCHROMSIZES' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:PREPARE_SMRNA_GENOME:CUSTOM_GETCHROMSIZES' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:CLIPSEQ_FIND_LONGEST_TRANSCRIPT' {
            publishDir = [
                path: { "${params.outdir}/00_genome" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:CLIPSEQ_FILTER_GTF' {
            publishDir = [
                enabled: false
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:ICOUNT_SEG_GTF' {
            publishDir = [
                path: { "${params.outdir}/00_genome" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:ICOUNT_SEG_FILTGTF' {
            ext.prefix = '.filt.seg'
            publishDir = [
                path: { "${params.outdir}/00_genome" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:RESOLVE_UNANNOTATED' {
            publishDir = [
                path: { "${params.outdir}/00_genome" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }

        withName: 'CLIPSEQ:PREPARE_CLIPSEQ:RESOLVE_UNANNOTATED_GENIC_OTHER' {
            publishDir = [
                path: { "${params.outdir}/00_genome" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

