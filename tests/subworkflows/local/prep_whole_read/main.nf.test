nextflow_workflow {

    name "Test Workflow PREP_WHOLE_READ"
    script "subworkflows/local/prep_whole_read/main.nf"
    config "/nemo/lab/ulej/home/users/baih/PM24162/goodwright_clipseq/clipseq/tests/subworkflows/local/prep_whole_read/test.config"
    workflow "PREP_WHOLE_READ"

    test("genome whole read analysis") {

        when {
            params {
                // define parameters here. Example:
                outdir = "${projectDir}/tests/subworkflows/local/prep_whole_read/output"
            }
            workflow {
                """
                // define inputs of the workflow here. Example:
                
                input[0] = channel.of(
                    tuple(
                        [id: 'WT_BRD4_plus_R1', group: 'WT_BRD4_plus', replicate: 1, single_end: true],
                        file("/nemo/lab/ulej/home/users/baih/PM24162/goodwright_clipseq/v1.3/clipseq/tests/ARTR-seq_20240925/output/03_filt_dedup/WT_BRD4_plus_R1.unique_genome.dedup.bam")
                    )
                )
                input[1] = channel.of(
                    tuple(
                        [id: 'WT_BRD4_plus_R1', group: 'WT_BRD4_plus', replicate: 1, single_end: true],
                        file("/nemo/lab/ulej/home/users/baih/PM24162/goodwright_clipseq/v1.3/clipseq/tests/ARTR-seq_20240925/output/03_filt_dedup/WT_BRD4_plus_R1.unique_genome.dedup.bam.bai")
                    )
                )
                input[2] = file("/nemo/lab/ulej/home/users/baih/PM24162/goodwright_clipseq/v1.3/clipseq/tests/ARTR-seq_20240925/output/00_genome/GRCh38.primary_assembly.genome.fa.fai")
                """
            }
        }

        then {
            assert workflow.success
            assert snapshot(workflow.out).match()

            with(workflow.out) {
                assert bam_plus.get(1) ==~ /.*\.bam/
                assert bam_minus.get(1) ==~ /.*\.bam/
            }
        }

    }

}
