nextflow_pipeline {

    name "only_genome_reference"
    script "main.nf"

    test("run_test") {
        when {
            params {
                outdir = "$outputDir"
                only_genome = true
                save_reference = false
                save_indexes = false
            }
        }

        then {
            assert workflow.success

            assert !(new File("$outputDir/00_genome/index/bowtie/homosapiens_smallRNA.1.ebwt").exists())
            assert !(new File("$outputDir/00_genome/index/bowtie/homosapiens_smallRNA.rev.1.ebwt").exists())

            assert !(new File("$outputDir/00_genome/index/star/chrStart.txt").exists())
            assert !(new File("$outputDir/00_genome/index/star/chrNameLength.txt").exists())

            assert !(new File("$outputDir/00_genome/longest_transcript.txt").exists())
            assert !(new File("$outputDir/00_genome/yeast_MitoV_filtered_seg.gtf").exists())
        }
    }

    test("run_test_save_reference") {
        when {
            params {
                outdir = "$outputDir"
                only_genome = true
                save_reference = true
                save_indexes = false
            }
        }

        then {
            assert workflow.success

            assert new File("$outputDir/00_genome/longest_transcript.txt").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_seg.gtf").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_regions.gtf.gz").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_seg.gtf").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_regions.gtf.gz").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_seg_genicOtherfalse.resolved.gtf").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_seg_genicOthertrue.resolved.gtf").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_regions_genicOtherfalse.resolved.gtf").exists()
            assert new File("$outputDir/00_genome/yeast_MitoV_filtered_regions_genicOthertrue.resolved.gtf").exists()
        }
    }

    test("run_test_save_indexes") {
        when {
            params {
                outdir = "$outputDir"
                only_genome = true
                save_reference = false
                save_indexes = true
            }
        }

        then {
            assert workflow.success

            assert new File("$outputDir/00_genome/index/bowtie/homosapiens_smallRNA.1.ebwt").exists()
            assert new File("$outputDir/00_genome/index/bowtie/homosapiens_smallRNA.rev.1.ebwt").exists()

            assert new File("$outputDir/00_genome/index/star/chrStart.txt").exists()
            assert new File("$outputDir/00_genome/index/star/chrNameLength.txt").exists()
            assert new File("$outputDir/00_genome/index/star/chrLength.txt").exists()
            assert new File("$outputDir/00_genome/index/star/sjdbList.fromGTF.out.tab").exists()
            assert new File("$outputDir/00_genome/index/star/exonInfo.tab").exists()
            assert new File("$outputDir/00_genome/index/star/sjdbList.out.tab").exists()
        }
    }
}
